name: End-to-End Tests

on:
  push:
    branches: [master]
  pull_request:
    branches:
      - "*"

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  android:
    # Android emulator said to perform best with macos HAXM
    runs-on: macos-latest
    env:
      PLATFORM: android
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Install Global Dependencies
        run: yarn global add react-native-cli @sentry/cli
      - uses: actions/cache@v2
        id: deps-cache
        with:
          path: |
            node_modules
            sample/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install
      - name: Install Sample Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install
        working-directory: ./sample
      - name: Build SDK
        run: yarn build
      - name: Start Appium Server
        run: yarn run appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
        working-directory: ./sample
      - name: Run Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: cd sample && react-native run-android --variant=release && curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions && yarn test
      - name: Upload Appium logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v1
        with:
          name: appium.android.log
          path: ./sample/appium.log
  ios:
    runs-on: macos-latest
    env:
      PLATFORM: ios
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Install Global Dependencies
        run: yarn global add react-native-cli @sentry/cli
      - uses: actions/cache@v2
        id: deps-cache
        with:
          path: |
            node_modules
            sample/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v2
        id: pods-cache
        with:
          path: |
            sample/ios/Pods
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-${{ hashFiles('sample/ios/Podfile.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install
      - name: Install Sample Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install
        working-directory: ./sample
      - name: Build SDK
        run: yarn build
      - name: Install iOS pods
        run: pod install
        working-directory: ./sample/ios
      - name: Build and run iOS emulator
        run: react-native run-ios --configuration Release
        working-directory: ./sample
      - name: Start Appium Server
        run: yarn run appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
        working-directory: ./sample
      - name: Poll until Appium Server starts
        run: |
          until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
            sleep 5
          done
      - name: Run Tests
        run: yarn test
        working-directory: ./sample
      - name: Upload Appium logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v1
        with:
          name: appium.ios.log
          path: ./sample/appium.log
