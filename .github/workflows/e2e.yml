name: End-to-End Tests

on:
  push:
    branches: [main]
  pull_request:

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  android:
    # Android emulator said to perform best with macos HAXM
    runs-on: macos-latest
    env:
      PLATFORM: android
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "12"
      - uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Install Global Dependencies
        run: yarn global add react-native-cli @sentry/cli yalc
      - uses: actions/cache@v3
        id: deps-cache
        with:
          path: |
            node_modules
            sample/node_modules
          key: ${{ github.workflow }}-${{ github.job }}-${{ hashFiles('yarn.lock', 'sample/yarn.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install

      - name: Build SDK
        run: yarn build
      - name: Package SDK
        run: yalc publish
      - name: Prepare sample for testing
        working-directory: ./sample
        run: sh ./scripts/prepareConfigsForTesting.sh
      - name: Install SDK in sample
        working-directory: ./sample
        run: yalc add @sentry/react-native
      - name: Install Sample Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        working-directory: ./sample
        run: yarn install

      - name: Start Appium Server
        if: env.SENTRY_AUTH_TOKEN != null
        working-directory: ./sample
        run: yarn run appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
      - name: Run Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          # All the tests need to be run in this script as the emulator is killed after this command.
          script: cd sample && react-native run-android --variant=release && curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions && yarn test
      - name: Upload Appium logs
        # This condition is so it uploads the logs always regardless of whether the previous step succeeded or not
        # otherwise it would not run if the previous step failed
        if: ${{ always() && env.SENTRY_AUTH_TOKEN != null }}
        uses: actions/upload-artifact@v3
        with:
          name: appium.android.log
          path: ./sample/appium.log
  ios:
    runs-on: macos-latest
    env:
      PLATFORM: ios
      TEST: true
      DEVICE: "iPhone 13"
      IOS_DEPLOYMENT_TARGET: 15.0
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "12"
      - name: Install Global Dependencies
        run: yarn global add react-native-cli @sentry/cli yalc
      - uses: actions/cache@v3
        id: deps-cache
        with:
          path: |
            node_modules
            sample/node_modules
          key: ${{ github.workflow }}-${{ github.job }}-${{ hashFiles('yarn.lock', 'sample/yarn.lock') }}
      - uses: actions/cache@v3
        id: pods-cache
        with:
          path: |
            sample/ios/Pods
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-${{ hashFiles('sample/ios/Podfile.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install

      - name: Build SDK
        run: yarn build
      - name: Package SDK
        run: yalc publish
      - name: Prepare sample for testing
        working-directory: ./sample
        run: sh ./scripts/prepareConfigsForTesting.sh
      - name: Install SDK in sample
        working-directory: ./sample
        run: yalc add @sentry/react-native
      - name: Install Sample Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        working-directory: ./sample
        run: yarn install
      - name: Install iOS pods
        # Even though we cache the pods, we call it regardless
        working-directory: ./sample/ios
        run: pod install

      - name: Start Appium Server
        if: env.SENTRY_AUTH_TOKEN != null
        working-directory: ./sample
        run: yarn run appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
      - name: Build and run iOS emulator
        if: env.SENTRY_AUTH_TOKEN != null
        working-directory: ./sample
        run: react-native run-ios --configuration Release --simulator "${DEVICE}"

      - name: Build WDA
        if: env.SENTRY_AUTH_TOKEN != null
        working-directory: ./sample
        run: xcodebuild -project ./node_modules/appium-webdriveragent/WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -derivedDataPath ./xc-build -destination name="${DEVICE}" IPHONEOS_DEPLOYMENT_TARGET=$IOS_DEPLOYMENT_TARGET GCC_TREAT_WARNINGS_AS_ERRORS=0 COMPILER_INDEX_STORE_ENABLE=NO build

        # Ping the Appium server to make sure its running, this way if it does fail it'll be easy to tell that this step failed and not the tests
      - name: Ping Appium Server
        if: env.SENTRY_AUTH_TOKEN != null
        run: curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions
      - name: Run Tests
        working-directory: ./sample
        run: yarn test

      - name: Upload Appium logs
        # This condition is so it uploads the logs always regardless of whether the previous step succeeded or not
        # otherwise it would not run if the previous step failed
        if: ${{ always() && env.SENTRY_AUTH_TOKEN != null }}
        uses: actions/upload-artifact@v3
        with:
          name: appium.ios.log
          path: ./sample/appium.log

  android-metrics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "12"
      - uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Install Global Dependencies
        run: yarn global add react-native-cli @sentry/cli yalc
      - uses: actions/cache@v3
        id: deps-cache
        with:
          path: |
            node_modules
            test/perf/TestAppSentry/node_modules
          key: ${{ github.workflow }}-${{ github.job }}-${{ hashFiles('yarn.lock', 'test/perf/TestAppSentry/yarn.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install
      - name: Build SDK
        run: yarn build
      - name: Package SDK
        run: yalc publish
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Dependencies - app sentry
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        working-directory: ./test/perf/TestAppSentry
        run: yarn install
      - uses: actions/cache@v3
        id: app-plain-cache
        with:
          path: test/perf/TestAppPlain/android/app/build/outputs/apk/release/app-release.apk
          key: ${{ github.workflow }}-${{ github.job }}-appplain-${{ hashFiles('test/perf/TestAppPlain/**') }}
      - name: Build app plain
        if: steps.app-plain-cache.outputs['cache-hit'] != 'true'
        working-directory: ./test/perf/TestAppPlain
        run: |
          yarn install
          (cd android ; ./gradlew assembleRelease)
      - name: Build app with Sentry
        working-directory: ./test/perf/TestAppSentry
        run: |
          yalc add @sentry/react-native
          yarn install
          (cd android ; ./gradlew assembleRelease)
          # Remove after build so that the cache isn't invaldiated due to the changes in yarn.lock.
          yarn remove @sentry/react-native
      - name: Collect apps metrics
        uses: getsentry/action-app-sdk-overhead-metrics@v1
        with:
          name: Android
          config: ./test/perf/metrics-android.yml
          sauce-user: ${{ secrets.SAUCE_USERNAME }}
          sauce-key: ${{ secrets.SAUCE_ACCESS_KEY }}

  ios-metrics:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "12"
      - uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Install Global Dependencies
        run: yarn global add react-native-cli @sentry/cli yalc
      - uses: actions/cache@v3
        id: deps-cache
        with:
          path: |
            node_modules
            test/perf/TestAppSentry/node_modules
          key: ${{ github.workflow }}-${{ github.job }}-${{ hashFiles('yarn.lock', 'test/perf/TestAppSentry/yarn.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install
      - name: Build SDK
        run: yarn build
      - name: Package SDK
        run: yalc publish
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - uses: actions/cache@v3
        id: app-plain-cache
        with:
          path: test/perf/test-app-plain.ipa
          key: ${{ github.workflow }}-${{ github.job }}-appplain-${{ hashFiles('test/perf/TestAppPlain/**') }}
      - name: Build app plain
        if: steps.app-plain-cache.outputs['cache-hit'] != 'true'
        working-directory: ./test/perf
        run: |
          (cd TestAppPlain ; yarn install)
          (cd TestAppPlain/ios ; pod install)
          fastlane build_perf_test_app_plain
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
      - name: Build app with Sentry
        working-directory: ./test/perf
        run: |
          (cd TestAppSentry ; yalc add @sentry/react-native; yarn install)
          (cd TestAppSentry/ios ; pod install)
          fastlane build_perf_test_app_sentry
          # Remove after build so that the cache isn't invaldiated due to the changes in yarn.lock.
          (cd TestAppSentry ; yarn remove @sentry/react-native)
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
      - name: Collect apps metrics
        uses: getsentry/action-app-sdk-overhead-metrics@v1
        with:
          name: iOS
          config: ./test/perf/metrics-ios.yml
          sauce-user: ${{ secrets.SAUCE_USERNAME }}
          sauce-key: ${{ secrets.SAUCE_ACCESS_KEY }}
