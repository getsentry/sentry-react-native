name: End-to-End Tests

on:
  push:
    branches: [main]
  pull_request:

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  device-test:
    # Android emulator said to perform best with macos HAXM
    runs-on: macos-latest
    strategy:
      # we want that the matrix keeps running, default is to cancel them if it fails.
      fail-fast: false
      matrix:
        platform: ['ios', 'android']
        include:
          - platform: ios
            runtime: '16.0'
            device: 'iPhone 14'
    env:
      PLATFORM: ${{ matrix.platform }}
      RUNTIME: ${{ matrix.runtime }}
      DEVICE: ${{ matrix.device }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install Global Dependencies
        run: yarn global add @sentry/cli yalc

      - name: NPM cache
        uses: actions/cache@v3
        id: deps-cache
        with:
          path: |
            node_modules
            sample/node_modules
          key: ${{ github.workflow }}-${{ github.job }}-npm-${{ hashFiles('yarn.lock', 'sample/yarn.lock') }}

      - name: iOS cache
        if: ${{ matrix.platform == 'ios' }}
        uses: actions/cache@v3
        with:
          path: |
            sample/ios/Pods
            sample/ios/DerivedData
          # Note: we cannot use sample/ios/Podfile.lock because it's not source controlled.
          key: ${{ github.workflow }}-${{ github.job }}-ios${{ matrix.runtime }}-${{ hashFiles('yarn.lock', 'sample/yarn.lock') }}

      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install

      - name: Build SDK
        run: yarn build

      - name: Package SDK
        run: yalc publish

      - name: Prepare sample for testing
        working-directory: ./sample
        run: sh ./scripts/prepareConfigsForTesting.sh

      - name: Install SDK in sample
        working-directory: ./sample
        run: yalc add @sentry/react-native

      - name: Install Sample Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        working-directory: ./sample
        run: yarn install

      - run: pod install
        if: ${{ matrix.platform == 'ios' }}
        working-directory: ./sample/ios
        env:
          # TEST env var is used in podfile to determine whether to include the sentry SDK from relative path or node_modules.
          TEST: true

      - name: Build ${{ matrix.platform }} sample app
        if: env.SENTRY_AUTH_TOKEN != null
        id: build
        working-directory: ./sample/${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.platform }}" == "android" ]]; then
            ./gradlew :app:assembleRelease -PreactNativeArchitectures=x86
          else
            mkdir -p DerivedData
            defaults write com.apple.dt.Xcode ShowBuildOperationDuration YES
            buildArgs=('-destination' 'platform=iOS Simulator,name=${{ matrix.device }}' 'ONLY_ACTIVE_ARCH=yes' '-sdk' 'iphonesimulator${{ matrix.runtime }}' '-derivedDataPath' $(cd "DerivedData" ; pwd -P))
            echo "buildArgs = ${buildArgs[@]}"
            xcodebuild -workspace sample.xcworkspace -configuration Release -scheme sample "${buildArgs[@]}" build
            xcodebuild -project ../node_modules/appium-webdriveragent/WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner GCC_TREAT_WARNINGS_AS_ERRORS=0 COMPILER_INDEX_STORE_ENABLE=NO "${buildArgs[@]}" build
          fi

      - name: Start Appium Server
        working-directory: ./sample
        run: yarn run appium --log-timestamp --log-no-colors --log appium.${{ matrix.platform }}.log &

        # Wait until the Appium server starts.
      - name: Check Appium Server
        uses: nick-fields/retry@3e91a01664abd3c5cd539100d10d33b9c5b68482 # pin@v2
        with:
          timeout_seconds: 60
          max_attempts: 10
          command: curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/sessions

      - name: Run tests on Android
        if: ${{ matrix.platform == 'android' }}
        uses: reactivecircus/android-emulator-runner@50986b1464923454c95e261820bc626f38490ec0 # pin@v2
        with:
          api-level: 29
          emulator-options: -accel on -no-snapshot -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -timezone US/Pacific
          working-directory: sample
          script: |
            # Collect logs
            adb logcat '*:D' 2>&1 >adb.log &
            adb devices -l

            yarn test --verbose

      - name: Run tests on iOS
        if: ${{ matrix.platform == 'ios' }}
        working-directory: ./sample
        run: yarn test --verbose

      - name: Upload logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-logs
          path: |
            ./sample/*.log
            ./sample/*.png
